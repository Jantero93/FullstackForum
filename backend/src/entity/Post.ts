/** TypeORM */
import { Entity } from 'typeorm';
import {
  Column,
  ManyToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn
} from 'typeorm';

/** Entities */
import { Topic } from './Topic';
import { User } from './User';

/** Class validator */
import { MaxLength } from 'class-validator';

@Entity()
export class Post {
  @PrimaryGeneratedColumn('uuid')
  id!: number;

  /** Autogenerated timestamp when post has created/updated */
  @Column('timestamptz')
  @UpdateDateColumn()
  updated!: string;

  /** Post's content */
  @Column()
  @MaxLength(1000, {
    message: 'Message length can be max 1000 characters long'
  })
  message!: string;

  /** Up and down votes on post */
  @Column()
  votes!: number;

  /** Topic where post belongs to */
  @ManyToOne(() => Topic, (topic) => topic.posts, { onDelete: 'CASCADE' })
  topic!: Topic;

  /** User who has written post */
  @ManyToOne(() => User, (user) => user.posts)
  user!: User;
}
